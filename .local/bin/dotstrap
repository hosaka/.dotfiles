#!/usr/bin/env bash

skip_ask=false

rustup_url="https://sh.rustup.rs"
binstall_url="https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh"
foundry_url="https://raw.githubusercontent.com/foundry-rs/foundry/master/foundryup/foundryup"

usage() {
  cat <<EOF
Dotfiles bootstrap installer

Usage: dotsrap [OPTIONS] <COMMAND>

Commands:
  all       Install everything
  foundry   A smart contract development toolchain
  mise      Development environment setup tool
  rustup    Rust toolchain cargo and cargo-binstall

Options:
  -y, --yes   Answer yes to all prompts
  -h, --help  Print this message and quit
EOF
}

hush() {
  "$@" >/dev/null 2>&1
}

has() {
  hush command -v "$@"
}

say() {
  printf "dotsrap: %s\n" "$1"
}

err() {
  say "$1" >&2
  exit 1
}

need() {
  if ! has "$1"; then
    err "need '$1' (command not found)"
  fi
}

ask() {
  [ $skip_ask = true ] && return

  printf "dotstrap: %s (y/N): " "$1"
  read -r answer
  case "$answer" in
  [yY] | [yY][eE][sS])
    true
    ;;
  *)
    false
    ;;
  esac
}

remind() {
  say "reload the shell to update the paths (source .bashrc)"
}

get_mise() {
  need curl

  if ! ask "this will install mise, continue?"; then
    return
  fi

  if has "mise"; then
    say "mise is already installed: $(which mise)"
  else
    if ! has "cargo"; then
      if ask "mise can be installed with cargo instead, install rustup first?"; then
        get_rustup
      else
        curl https://mise.jdx.dev/install.sh | sh
        return
      fi
    fi
    cargo binstall --no-discover-github-token -y mise
  fi
}

get_rustup() {
  need curl

  if ! ask "this will install rusup and cargo-binstall, continue?"; then
    return
  fi

  local curl_opts=(-L --proto '=https' --tlsv1.2 -sSf)

  if has "cargo"; then
    say "rustup is already installed: $(which rustup)"
  else
    curl "${curl_opts[@]}" $rustup_url | bash -s -- --default-toolchain 'stable' --no-modify-path -y
    source ~/.cargo/env
  fi

  if has "cargo-binstall"; then
    say "cargo-binstall is already installed: $(which cargo-binstall)"
  else
    curl "${curl_opts[@]}" $binstall_url | bash
  fi
}

get_foundry() {
  need curl

  if ! ask "this will install foundry, continue?"; then
    return
  fi

  # note: install directly, instead of using https://foundry.paradigm.xyz
  local foundry_dir="${XDG_CONFIG_HOME:-$HOME}/.foundry"
  local foundry_bin_dir="$foundry_dir/bin"
  local foundry_man_dir="$foundry_dir/share/man/man1"
  local foundry_bin_path="$foundry_bin_dir/foundryup"

  mkdir -p "$foundry_bin_dir"
  curl -# -L "$foundry_url" -o "$foundry_bin_path"
  chmod +x "$foundry_bin_path"
  mkdir -p "$foundry_man_dir"
}

options=$(getopt --options "y,h" --longoptions "yes,help" --name "dotstrap" -- "$@")
exit_code=$?
if [ $exit_code -ne 0 ]; then
  exit $exit_code
fi

eval set -- "$options"

while [ -n "${1+x}" ]; do
  case "$1" in
  -h | --help)
    usage
    exit 0
    ;;
  -y | --yes)
    skip_ask=true
    shift
    ;;
  --)
    shift
    break
    ;;
  esac
  shift
done

all() {
  get_rustup
  get_mise
  command mise --cd "$HOME" -y install
}

case "$1" in
"all")
  all
  remind
  ;;
"foundry")
  get_foundry
  remind
  ;;
"mise")
  get_mise
  remind
  ;;
"rustup")
  get_rustup
  remind
  ;;
*)
  err "invalid command -- '$1'" >&2
  ;;
esac
